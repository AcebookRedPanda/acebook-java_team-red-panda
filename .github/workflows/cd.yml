name: CD

on:
  push:
    branches:
      - main  # Set your main branch name here

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'  # Choose your preferred distribution
        java-version: '11'
        java-package: 'jdk'

    - name: Build Spring Boot Application
      run: ./mvnw clean package -DskipTests=true

    - name: Docker Build and Push
      if: github.ref == 'refs/heads/main'  # Only build Docker image on main branch
      env:
        IMAGE_NAME: ghcr.io/Umi007/acebook-red-panda
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      run: |
        echo $GITHUB_TOKEN | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        docker build -t $IMAGE_NAME --build-arg DB_USERNAME=$DB_USERNAME --build-arg DB_PASSWORD=$DB_PASSWORD .
        docker push $IMAGE_NAME

    # Uncomment and configure the following section if you want to deploy to production
    # - name: Deploy to Production
    #   if: github.ref == 'refs/heads/main'  # Deploy only on main branch
    #   env:
    #     SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
    #     REMOTE_USER: your-remote-username
    #     REMOTE_HOST: your-remote-host
    #     REMOTE_PATH: /path/to/deployment/directory
    #   run: |
    #     mkdir -p ~/.ssh
    #     echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    #     chmod 600 ~/.ssh/id_rsa
    #     ssh-keyscan -H $REMOTE_HOST >> ~/.ssh/known_hosts
    #     scp -r ./your-application.jar $REMOTE_USER@$REMOTE_HOST:$REMOTE_PATH
